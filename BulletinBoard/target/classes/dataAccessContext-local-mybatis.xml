<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Application context definition for JPetStore's data access layer.
  - Accessed by business layer objects defined in "applicationContext.xml"
  - (see web.xml's "contextConfigLocation").
  -
  - This version of the data access layer works on a combined database,
  - using a local DataSource with DataSourceTransactionManager. It does not
  - need any JTA support in the container: It will run as-is in plain Tomcat.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


<context:component-scan 
      base-package="org.springframework.samples.web.dao.mybatis" />
      
	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<context:property-placeholder location="classpath*:application-properties.xml"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="${database.driverClassName}"
		p:url="${database.url}"
		p:username="${database.username}"
		p:password="${database.password}"
	/>
	<!-- 이거는 서버 파일에 직접 설정을 해줬을 때!!! 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
      <property name="jndiName" value="jdbc/pcc"/>
       <property name="resourceRef" value="true"/> 
   </bean>
	-->
	<!--sqlSession bean에서  SQL session을 생성한다. DB connection과 같은 역할 -->	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:mybatis-config.xml"
	 />
	
	<!-- SqlSessionTemplate MyBatis의 CRUD 템플릿을 사용할 수 있도록 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 밑에 코드에서 변경가능/ 내가 jdbc를 사용할 지 아니면 mybatis를 사용할 지  -->
	
	<!-- dataSource에서 connection pool를 관리하고 있음 -->
	<!-- spring jdbc 사용시 -->
	<!-- 
	<bean id="userDao" class="org.springframework.samples.web.dao.users.JdbcUserDao"
		p:dataSource-ref="dataSource"/>
	-->
		
	<!-- SqlSessionTemplate 주입  -->
<!-- <bean id="userDao" class="org.springframework.samples.web.dao.users.MyBatisUserDao"
		p:sqlSession-ref="sqlSession"/>  // Autowired를 해야 이부분도 한다.-->
		<!--  mybatis는 dataSource가 아니라 sqlSession을 받는다.  -->
	
</beans>
